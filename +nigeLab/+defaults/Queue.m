function varargout = Queue(varargin)
%% QUEUE  Template for initializing parameters for submitting jobs to queue
%
%  pars = nigeLab.defaults.Queue;
%  pars = nigeLab.defaults.Queue(paramName);  % returns a single parameter
%
% By: MAECI 2018 collaboration (Federico Barban & Max Murphy)

%%
pars = struct;

% Only specify this field if you want to force use of a single cluster
% pars.Cluster = 'CPLMJS'; 
pars.UseParallel = false; % set to false to switch to serial processing mode
% pars.UseRemote = false;
% pars.UseParallel = false;
pars.UseRemote = false; 

% Local path equivalents for remote; these will be replaced if
% .OnRemote flag is true (if the job is run via "qWrapper" generated by
% "nigeLab.utils.buildWorkerConfigScript", which is called from
% "nigeLab.libs.DashBoard/qOperations":
pars.Local.RecRoot = 'R:/';
pars.Local.SaveRoot = 'P:/';
pars.Remote.RecRoot = 'P:/Recorded_Data'; 
pars.Remote.SaveRoot = 'P:/Processed_Data';

% pars.ClusterList = {'CPLMJS';'CPLMJS2';'CPLMJS3'};
pars.ClusterList = {'CPLMJS';'CPLMJS2'};
pars.NWorkerMinMax = [1,1]; % Min & Max # workers to assign to a job
pars.WaitTimeSec = 1; % Time to wait between checking for new cluster
pars.InitTimeSec = 5; % Time to wait when initializing cluster

% pars.RemoteRepoPath = '';
% pars.RemoteRepoPath = ...
%    {'C:\Users\fbarban\Documents\MATLAB\ePhys_packages'}; % FB
pars.RemoteRepoPath = ...
   {'T:\Communal_Code\nigeLab'}; % MM (KUMC Isilon)
% Note: if using older versions (such as v1.1.0-alpha), you will need to
% install the package on the remote repository as well, and set that path
% here (in pars.RemoteRepoPath)

%% Parse output
if nargin < 1
   varargout = {pars};
else
   varargout = cell(1,nargin);
   f = fieldnames(pars);
   for i = 1:nargin
      idx = ismember(lower(f),lower(varargin{i}));
      if sum(idx) == 1
         varargout{i} = pars.(f{idx});
      end
   end
end



end

