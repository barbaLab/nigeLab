function diskFile = makeDiskFile(diskPars,data)
%MAKEDISKFILE   Short-hand function to create file on disk
%
%  diskFile = nigeLab.utils.makeDiskFile(diskPars);
%  diskFile = nigeLab.utils.makeDiskFile(diskPars,data);
%  --> Initializes file with data
%
%  diskPars: Struct with following fields
%     --> 'name' (full filename of data file to be created or overwritten)
%     --> 'format' ('Hybrid', 'Matfile', 'Event', or 'Other')
%     --> 'class' (class of output 'data' variable)
%     --> 'size'  (size of the output 'data' variable)
%     --> 'access' ('r' for 'read only' or 'w' for 'write')
%
%  diskFile: Output, which is a nigeLab.libs.DiskData object that points to
%              where the data is on the disk.

%CHECK INPUT
REQUIRED_FIELDS = {'name','format','class','size','access'};
if nargin < 1
   error(['nigeLab:' mfilename ':TooFewInputs'],...
      '[MAKEDISKFILE]: diskPars (struct) is a required input argument.');
end

if ~isstruct(diskPars)
   error(['nigeLab:' mfilename ':BadClass'],...
      '[MAKEDISKFILE]: diskPars must be a struct');
end

iField = find(~ismember(REQUIRED_FIELDS,fieldnames(diskPars)));
if ~isempty(iField)
   for i = 1:numel(iField)
      nigeLab.utils.cprintf('Errors*',...
         '/t/t->/t[MAKEDISKFILE]: '); ...
      nigeLab.utils.cprintf('[0.5 0.5 0.5]*',...
         'Missing field: %s\n',REQUIRED_FIELDS{iField(i)});
   end
   error(['nigeLab:' mfilename ':BadDiskFileInit'],...
      '[MAKEDISKFILE]: Missing fields of diskPars');
end
if ~isfield(diskPars,'verbose')
   diskPars.verbose = true;
end

% Then create new pre-allocated diskFile
if nargin < 2
   diskFile = nigeLab.libs.DiskData(...
      diskPars.format,...
      diskPars.name,...
      'class',diskPars.class,...
      'size',diskPars.size,...
      'access',diskPars.access,...
      'verbose',diskPars.verbose);
else
   diskFile = nigeLab.libs.DiskData(...
      diskPars.format,...
      diskPars.name,...
      data,...
      'class',diskPars.class,...
      'size',diskPars.size,...
      'access',diskPars.access,...
      'verbose',diskPars.verbose,...
      'overwrite',true);
end
end