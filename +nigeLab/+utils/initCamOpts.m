function opts = initCamOpts(varargin)
% INITCAMOPTS  Return default options struct for selecting a camera stream
%
%  opts = nigeLab.utils.initCamOpts();
%  opts = nigeLab.utils.initCamOpts('source',source,...);
%
%  varargin  --  <'Name', value> argument pairs:
%                 (e.g. 'ssource','skey')
%
%              --> 'camera' struct:
%                 --> csource: 'cindex' (default), 'ckey', or 'cname'
%                 --> ckey: (default ''); match .Key of Videos object
%                 --> cindex: (default 1); direct index to Videos object
%                 --> cname: (default ''); match .Name of Videos object
%                 --> cview: (default ''); match .View of Videos object
%              --> 'stream' struct:
%                 --> ssource: 'sindex' (default), 'skey', or 'sname'
%                 --> skey: (default ''); match .Key of VidStream
%                 --> sindex: (default 1); direct index to VidStream
%                 --> sname: (default ''); match .Name of VidStream
%
%  NOTE: If opts.camera.cview is set to a char array, then this is used to
%  reduce the candidate list of cameras (video objects) to only include
%  those that match the view angle.

def = struct(...
   'camera', ...
      struct(...
         'csource','cindex', ...
         'ckey','', ...
         'cindex',1, ...
         'cname','', ...
         'cview','' ...
      ),...
   'stream', ...
      struct(...
         'ssource','sindex', ...
         'skey','', ...
         'sindex',1, ...
         'sname','' ...
      ) ...
);

% Case-insensitive matching; skip if property is not matched (no error)
opts = struct('camera',struct,'stream',struct);
opts.camera = nigeLab.utils.getopt(def.camera,3,varargin{:});
opts.stream = nigeLab.utils.getopt(def.stream,3,varargin{:});
end