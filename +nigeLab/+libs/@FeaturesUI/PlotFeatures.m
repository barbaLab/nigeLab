function PlotFeatures(obj)
%% PLOTFEATURES  Plot cluster features from SORT UI in 3D and 2D.
if ~isvalid(obj.Figure)
    return
end

% Loop through each subset of 3 features
curCh = obj.ChannelSelector.Channel;
feat = obj.Data.feat{curCh};
cl = obj.Data.class{curCh};

% Get TIME binning vector for plotting features vs time (mins)
ts = obj.Data.ts{curCh};
xl = xlim(obj.Features2D);
yl = ylim(obj.Features2D);
cla(obj.Features2D);
set(obj.Features2D,...
    'XLim',xl,...
    'YLim',yl);

xl = xlim(obj.Features3D);
yl = ylim(obj.Features3D);
zl = ylim(obj.Features3D);

cla(obj.Features3D);
set(obj.Features3D,...
    'XLim',xl,...
    'YLim',yl,...
    'ZLim',zl);

obj.PropLinker = linkprop([obj.Features2D obj.Features3D],{'XLim','YLim'});

% randomly select spikes to plot
obj.rsel = false(size(obj.Data.feat{curCh},1),1);

obj.rsel( randi( numel(obj.rsel),1,...
   min(obj.NFEAT_PLOT_POINTS,numel(obj.rsel)) ) ) = true;


for iC = 1:obj.NCLUS_MAX
   if obj.nFeat(curCh) < max(obj.featInd) 
      continue
   end
   

   if obj.NFEAT_PLOT_POINTS <= sum(obj.rsel & ...
         cl==iC)
      fi = cl==iC & ... % fi --> features included
         obj.rsel;   % include property no more available
   else
      fi = cl==iC;
   end
   
   if obj.VisibleClusters(iC) > 0
      state = 'on';
   else
      state = 'off';
   end

   
   X = feat(fi,:)*obj.projVecs';
   if sum(fi) > obj.MINSPIKES
      if iC > 1
         plot3(obj.Features3D, ...
            X(:,1), ...
            X(:,2), ...
            ts(fi), ...
            'LineStyle', 'none',...
            'MarkerSize',5,... % (size; filled markers)
            'MarkerFaceColor',obj.COLS{iC},...
            'MarkerEdgeColor',obj.COLS{iC},...
            'Marker','.',...
            'Visible',state,...
            'UserData',iC);

         l=line(obj.Features2D,...
            X(:,1), ...
            X(:,2), ...
            'LineStyle', 'none',...
            'MarkerSize',5,...
            'MarkerFaceColor',obj.COLS{iC},...
            'MarkerEdgeColor',obj.COLS{iC},...
            'Marker','.',...
            'Visible',state,...
            'UserData',iC,...
            'ButtonDownFcn',@obj.ButtonDownFcnSelect2D);
      else
          plot3(obj.Features3D, ...
            X(:,1), ...
            X(:,2), ...
            ts(fi), ...
            'LineStyle', 'none',...
            'MarkerSize',5,... % (size; filled markers)
            'MarkerFaceColor',[0.15 0.15 0.15],...
            'MarkerEdgeColor',[0.15 0.15 0.15],...
            'Marker','.',...
            'Visible',state,...
            'UserData',iC);

         line(obj.Features2D,...
            X(:,1), ...
            X(:,2), ...
            'LineStyle', 'none',...
            'MarkerSize',5,...
            'MarkerFaceColor',[0.15 0.15 0.15],...
            'MarkerEdgeColor',[0.15 0.15 0.15],...
            'Marker','.',...
            'Visible',state,...
            'UserData',iC,...
            'ButtonDownFcn',@obj.ButtonDownFcnSelect2D);
      end
      zlim(obj.Features3D,[0 max([zlim(obj.Features3D),ts(fi)'])]);
   end
   
end

drawnow;
% obj.ResetFeatureAxes;
obj.CountExclusions(obj.ChannelSelector.Channel);
end