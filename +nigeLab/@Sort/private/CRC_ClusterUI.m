classdef CRC_ClusterUI < handle
%% CRC_CLUSTERUI Main class definition for spike sorting GUI
   properties (Access = public)
      Figure
      Data
      Features3D
      Features2D
      Submit
      Confirm
      SpikePanel
      SpikePlot
      SpikeImage
      ClusterLabel
      Exclusions
      FeatureCombos
      Channels
      HasFocus
      ReCluster
      VisibleFeatures
      TagLabels
      ZoomSlider
      Available = nan;
   end
   
   methods (Access = public)
      function obj = CRC_ClusterUI(handles)
         obj.Figure = figure('Name','Combine and Restrict Clusters', ...
            'GraphicsSmoothing','off', ...
            'ToolBar', 'figure', ...
            'NumberTitle','off', ...
            'MenuBar', 'none', ...
            'Units','Normalized',...
            'Color','k', ...
            'Position',[0.1 0.1 0.8 0.8]);

         % Panel with control buttons and cluster list
         ctrlpanel = uipanel(obj.Figure, ...
            'Units','Normalized', ...
            'BackgroundColor','k', ...
            'ForegroundColor','w', ...
            'FontSize',18,...
            'FontName', 'Arial', ...
            'BorderType','none',...
            'Position',[0.825 0.025 0.15 0.925]);
         
         % Channel list
         obj.Channels = uicontrol(ctrlpanel,'Style','popupmenu',...
            'Units','Normalized',...
            'BackgroundColor','w',...
            'ForegroundColor','k',...
            'FontSize',16,...
            'FontName','Arial',...
            'String',handles.UI.channels,...
            'Callback',{@CRC_ChannelPopCallback,obj},...
            'Position',[0.1 0.925 0.8 0.075]);
         
         % Panel for selecting which clusters to show in feature panel
         visionpanel = uipanel(ctrlpanel,...
            'Units','Normalized',...
            'BackgroundColor','k',...
            'ForegroundColor','k',...
            'BorderType','none',...
            'Position',[0.025 0.5 0.95 0.475]);
         
         
         
         
         obj.VisibleFeatures = cell(1,handles.NCLUS_MAX);
         obj.TagLabels = cell(1,handles.NCLUS_MAX);
         obj.ZoomSlider = uicontrol(visionpanel,'Style','slider', ...
                           'Units','Normalized',...
                           'BackgroundColor','w',...
                           'ForegroundColor','k',...
                           'FontSize',16,...
                           'FontName','Arial',...
                           'Max',500,...
                           'Min',50,...
                           'Value',100,...
                           'ToolTipString','Zoom %',...
                           'Position',[0.925 0.167 0.065 0.66],...
                           'Callback',{@CRC_ZoomSlide,obj});
                        
                        
         for iN = 1:handles.NCLUS_MAX
            obj.VisibleFeatures{iN} = annotation(visionpanel,...
               'textbox',...
               'Units','Normalized',...
               'Position',[0.1 1-(iN/(handles.NCLUS_MAX+1)+0.05) 0.39 0.075],...
               'FontName','Arial',...
               'FontSize',14,...
               'FontWeight','bold',...
               'HorizontalAlignment','center',...
               'VerticalAlignment','middle',...
               'Color','k',...
               'EdgeColor','w',...
               'LineWidth',3,...
               'BackgroundColor','k',...
               'UserData',true,...
               'ButtonDownFcn',{@CRC_ToggleVision,obj});
            if isempty(handles.cl.tag.defs{iN})
               tags_val = 1;
            else
               tags_val = find(ismember(handles.Labels(2:end),...
                  handles.cl.tag.defs(iN)),1,'first');
               if isempty(tags_val)
                  tags_val = 1;
               else
                  tags_val = tags_val + 1;
               end
            end
            obj.TagLabels{iN} = uicontrol(visionpanel,...
               'Style','popupmenu',...
               'String',handles.Labels,...
               'FontName','Arial',...
               'FontSize',14,...
               'HorizontalAlignment','center',...
               'ForegroundColor','w',...
               'BackgroundColor','k',...
               'UserData',iN,...
               'Value',tags_val,...
               'Units','Normalized',...
               'Position',[0.51 1-(iN/(handles.NCLUS_MAX+1)+0.0575) 0.39 0.075],...
               'Callback',{@CRC_UpdateTag,obj});
            
            if iN > 1
               str = sprintf('Cluster %d',iN-1);
               obj.VisibleFeatures{iN}.BackgroundColor = handles.COLS{iN};
            else
               str = 'OUT';
               obj.VisibleFeatures{iN}.Color = 'w';
               obj.VisibleFeatures{iN}.UserData = false;
               obj.VisibleFeatures{iN}.EdgeColor = [0.66 0.66 0.66];
               obj.VisibleFeatures{iN}.LineWidth = 2;
               obj.TagLabels{iN}.Value = 11;
            end
            obj.VisibleFeatures{iN}.String = str;
         end
         
         % Panel for housing UI pushbuttons
         buttonpanel = uipanel(ctrlpanel,...
            'Units','Normalized',...
            'BackgroundColor','k',...
            'ForegroundColor','k',...
            'BorderType','none',...
            'Position',[0.025 0.025 0.95 0.475]);
         
         uicontrol(buttonpanel,'Style','pushbutton', ...
            'Units','Normalized', ...
            'BackgroundColor','r',...
            'ForegroundColor','w', ...
            'FontSize', 18, ...
            'FontName', 'Arial', ...
            'String','Exit',...
            'Callback',{@CRC_ExitPushCallback,obj},...
            'Position',[0.1 0.025 0.8 0.15]);
         
         obj.Submit = uicontrol(buttonpanel,'Style','pushbutton', ...
            'Units','Normalized', ...
            'BackgroundColor',[0 0.6 0],...
            'ForegroundColor','w', ...
            'FontSize', 18, ...
            'FontName', 'Arial', ...
            'String','Submit',...
            'Callback',{@CRC_SubmitPushCallback,obj},...
            'Position',[0.1 0.20 0.8 0.15]);
         
         obj.ReCluster = uicontrol(buttonpanel,'Style','pushbutton',...
            'Units','Normalized', ...
            'BackgroundColor','m',...
            'ForegroundColor','w', ...
            'FontSize', 18, ...
            'FontWeight','bold',...
            'FontName', 'Arial', ...
            'String','Re-Cluster',...
            'Callback',{@CRC_DoSPC,obj},...
            'Position',[0.1 0.375 0.8 0.15]);
         
         obj.Confirm = uicontrol(buttonpanel,'Style','pushbutton',...
            'Units','Normalized', ...
            'BackgroundColor','y',...
            'ForegroundColor','k', ...
            'FontSize', 18, ...
            'FontWeight','bold',...
            'FontName', 'Arial', ...
            'String','Confirm Channel',...
            'Callback',{@CRC_ConfirmPushCallback,obj},...
            'Position',[0.1 0.55 0.8 0.15]);
         
         uicontrol(buttonpanel,'Style','pushbutton',...
            'Units','Normalized', ...
            'BackgroundColor',[0.5 0.5 0.5],...
            'ForegroundColor','k', ...
            'FontSize', 18, ...
            'FontName', 'Arial', ...
            'String','Reset',...
            'Callback',{@CRC_ResetPushCallback,obj},...
            'Position',[0.1 0.725 0.8 0.15]);
         
         % Panel for plotting spikes
         str = sprintf('\\color{magenta}\\bf%s\\rm\\color{white} - %s',...
            handles.recname{1},handles.recname{2});
         annotation(obj.Figure,'Textbox',...
            'FontName','Arial',...
            'FontSize',16,...
            'HorizontalAlignment','center',...
            'VerticalAlignment','middle',...
            'String',str,...
            'Units','Normalized',...
            'Position',[0.025 0.95 0.75 0.05])
         obj.SpikePanel = uipanel(obj.Figure,'Title','Spikes', ...
            'Units','Normalized', ...
            'BackgroundColor','k', ...
            'ForegroundColor','w', ...
            'FontSize',18,...
            'FontName', 'Arial', ...
            'Position',[0.025 0.025 0.6 0.925]);
         
         obj.SpikePlot = cell(handles.NCLUS_MAX,1);
         obj.ClusterLabel = cell(handles.NCLUS_MAX,1);
         for iN = 1:handles.NCLUS_MAX                % Spike plot axes
            obj.SpikePlot{iN,1} = axes(obj.SpikePanel, ...
               'Box','on',...
               'YTick',linspace(handles.SPK_YLIM(1), ...
                                handles.SPK_YLIM(2),9),...
               'XTick',[],...
               'XColor','k',...
               'YColor','k',...
               'Units','Normalized',...
               'xlimmode','manual',...
               'ylimmode','manual',...
               'zlimmode','manual',...
               'zlim',[0 1], ...
               'climmode','manual',...
               'clim',[0 1], ...
               'alimmode','manual',...
               'alim',[0 1],...
               'nextplot','replacechildren',...
               'UserData',[iN,iN,iN],...
               'ydir','normal',...
               'Position',handles.AX_POS{iN}, ...
               'ButtonDownFcn',{@CRC_SwitchCluster,obj});
            
            if iN <= 1
               obj.ClusterLabel{iN,1} = annotation(obj.SpikePanel,'textbox',...
                  'String','OUT',...
                  'EdgeColor','none',...
                  'Color','k',...
                  'BackgroundColor','w',...
                  'FontWeight','bold',...
                  'FontName','Arial',...
                  'FontSize',14,...
                  'HorizontalAlignment','Center',...
                  'VerticalAlignment','middle',...
                  'Units','Normalized',...
                  'UserData',iN,...
                  'Position',handles.LAB_POS{iN}, ...
                  'ButtonDownFcn',{@CRC_SetCurrentCluster,obj});
            else
               obj.ClusterLabel{iN,1} = annotation(obj.SpikePanel,'textbox',...
                  'String',sprintf('Clu %d',iN-1),...
                  'EdgeColor','none',...
                  'Color','w',...
                  'BackgroundColor','k',...
                  'FontWeight','bold',...
                  'FontName','Arial',...
                  'FontSize',16,...
                  'HorizontalAlignment','Center',...
                  'VerticalAlignment','middle',...
                  'Units','Normalized',...
                  'UserData',iN,...
                  'Position',handles.LAB_POS{iN}, ...
                  'ButtonDownFcn',{@CRC_SetCurrentCluster,obj});
            end
            
         end
         obj.HasFocus = obj.SpikePlot{1};
         
         featurepanel = uipanel(obj.Figure,'Units','Normalized',...
            'BackgroundColor','k',...
            'ForegroundColor','k',...
            'BorderType','none',...
            'Position',[0.65 0.025 0.15 0.925]);
         
         featpanel = uipanel(featurepanel, ...
            'Units', 'Normalized', ...
            'BackgroundColor','k',...
            'ForegroundColor','k', ...
            'FontSize', 16, ...
            'FontName','Arial',...
            'BorderType','none',...
            'Position',[0.01 0.01 0.98 0.98]);
         
         handles.NZTICK = min(handles.NZTICK,round(handles.zmax));
         handles.zticklocs = linspace(0,handles.zmax,handles.NZTICK);
         handles.zticklab = cell(numel(handles.zticklocs),1);
         for iZ = 1:handles.NZTICK
            handles.zticklab{iZ,1} = sprintf('%3.1fm',...
               handles.zticklocs(iZ));
         end
         obj.Features3D = axes(featpanel,'Color','k', ...
            'YTick',[],...
            'ylimmode','manual',...
            'ylim',[-handles.SDMAX handles.SDMAX],...
            'XTick',[],...
            'xlimmode','manual',...
            'xlim',[-handles.SDMAX handles.SDMAX],...
            'ZTick',handles.zticklocs,...
            'ZTickLabel',handles.zticklab,...
            'zlimmode','manual',...
            'zlim',[0 handles.zmax], ...
            'View',handles.FEAT_VIEW, ...
            'XColor','w',...
            'YColor','w',...
            'ZColor','w',...
            'Units','Normalized',...
            'FontSmoothing','off',...
            'nextplot','add',...
            'Position',[0.15 0.45 0.8 0.425]);
         
         obj.Features2D = axes(featpanel,'Color','k', ...
            'FontSmoothing','off',...
            'ylimmode','manual',...
            'ylim',[-handles.SDMAX handles.SDMAX],...
            'YTick',[],...
            'xlimmode','manual',...
            'xlim',[-handles.SDMAX handles.SDMAX],...
            'XTick',[],...
            'zlimmode','manual',...
            'zlim',[0 1], ...
            'alimmode','manual',...
            'alim',[0 1], ...
            'climmode','manual',...
            'clim',[0 1], ...
            'XColor','k',...
            'YColor','k',...
            'ZColor','k',...
            'Units','Normalized',...
            'nextplot','add',...
            'Position',[0.1 0.125 0.8 0.3]);
         
         obj.FeatureCombos = uicontrol(featpanel,'Style','popupmenu',...
            'Units','Normalized',...
            'BackgroundColor','w',...
            'ForegroundColor','k',...
            'FontSize',14,...
            'FontName','Arial',...
            'String',handles.featname,...
            'Callback',{@CRC_FeatPopCallback,obj},...
            'Position',[0.1 0.01 0.8 0.1]);
         
         obj.Exclusions = annotation(featpanel,'textbox','EdgeColor','none',... % Features label
            'Color','w',...
            'FontWeight','bold',...
            'FontName','Arial',...
            'FontSize',16,...
            'String','Features',...
            'HorizontalAlignment','Center',...
            'VerticalAlignment','bottom',...
            'Units','Normalized',...
            'Position',[0.1,0.9,0.8,0.1]);
         
         obj.Data = handles;
         CRC_ChannelPopCallback(obj.Channels,nan,obj);
      end
      
      
   end
end